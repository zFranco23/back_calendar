{"version":3,"sources":["redux/types.js","redux/reducers/authReducer.js","redux/reducers/calendarReducer.js","redux/reducers/uiReducer.js","redux/reducers/globalReducer.js","redux/store/store.js","axios/axios.config.js","redux/actions/auth.js","helpers/schemas.js","components/auth/LoginScreen.js","helpers/messages-es.js","helpers/prepareData.js","redux/actions/calendar.js","components/ui/Navbar.js","components/calendar/CalendarEvent.js","redux/actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","loading","events","activeEvent","auxiliarEvent","title","notes","start","moment","toDate","end","add","modalOpen","globalReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","eid","filter","auth","uid","name","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","axiosInstance","axios","create","baseURL","process","requestAPI","a","url","body","headers","method","get","response","post","put","delete","data","finishChecking","login","user","logout","schemaLogin","yup","shape","email","required","password","min","schemaRegister","confirm_password","oneOf","LoginScreen","dispatch","useDispatch","useForm","resolver","yupResolver","register","handleSubmit","registerCreate","handleSubmitRegister","className","onSubmit","values","resp","ok","localStorage","setItem","token","Date","getTime","Swal","fire","mssg","startLogin","placeholder","value","messages","allDay","previous","next","today","month","week","day","agenda","date","time","event","noEventsInRange","showMore","total","prepareDataEvents","eventLoaded","eventAddNew","eventClearActiveEvent","eventUpdated","eventDeleted","Navbar","useSelector","onClick","removeItem","CalendarEvent","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","nowMoreOneHour","clone","initState","CalendarModal","useState","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","eventDetails","setEventDetails","useEffect","handleInputChange","target","closeModal","console","log","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","preventDefault","startDate","startEnd","isSameOrAfter","trim","length","getItem","getState","res","id","_id","eventStartAddNew","onChange","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","view","setView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","components","onDoubleClickEvent","onSelectEvent","eventSetActive","onSelectSlot","selectable","onView","PrivateRoute","Component","component","isAuthenticated","rest","render","props","to","PublicRoute","AppRouter","exact","path","CalendarApp","ReactDOM","document","getElementById"],"mappings":"mOAEaA,EACK,kBADLA,EAEM,mBAFNA,EAKI,wBALJA,EAMQ,qBANRA,EAQK,oBARLA,EASc,6BATdA,EAUM,wBAVNA,EAWM,wBAXNA,EAeW,yBAfXA,EAmBG,eAnBHA,EAoBI,gBApBJA,EAsBO,yBCpBdC,EAAa,CACfC,SAAU,G,wBCsBRD,EAAe,CACjBE,OAAS,GAGTC,YAAc,KACdC,cAAgB,CACZC,MAAQ,GACRC,MAAQ,GACRC,MAAQC,MAASC,SACjBC,IAAMF,MAASG,IAAI,IAAI,SAASF,WChClCT,EAAe,CACjBY,WAAY,GCEHC,EAAgBC,YAAgB,CACzCC,GDAqB,WAAsC,IAApCC,EAAmC,uDAA3BhB,EAAeiB,EAAY,uCAC1D,OAAQA,EAAOC,MACX,KAAKnB,EACD,OAAO,2BACAiB,GADP,IAEIJ,WAAY,IAEpB,KAAKb,EACD,OAAO,2BACAiB,GADP,IAEIJ,WAAY,IAEpB,QACI,OAAOI,ICZfG,SF+B2B,WAAqC,IAAnCH,EAAkC,uDAA1BhB,EAAeiB,EAAW,uCAE/D,OAAQA,EAAOC,MACX,KAAKnB,EAED,OAAO,2BACAiB,GADP,IAEIb,YAAcc,EAAOG,UAE7B,KAAKrB,EACD,OAAO,2BACAiB,GADP,IAEId,OAAM,sBAAOc,EAAMd,QAAb,CAAoBe,EAAOG,YAEzC,KAAKrB,EACD,OAAO,2BACAiB,GADP,IAEIb,YAAc,OAEtB,KAAKJ,EACD,OAAO,2BACAiB,GADP,IAEId,OAASc,EAAMd,OAAOmB,KAAM,SAAAC,GAAC,OAAMA,EAAEC,MAAMN,EAAOG,QAAQG,IAAMN,EAAOG,QAAUE,OAGzF,KAAKvB,EACD,OAAO,2BACAiB,GADP,IAEId,OAASc,EAAMd,OAAOsB,QAAQ,SAAAF,GAAC,OAAIA,EAAEC,MAAOP,EAAMb,YAAYoB,OAC9DpB,YAAc,OAEtB,KAAKJ,EACD,OAAO,2BACAiB,GADP,IAEId,OAAM,YAAOe,EAAOG,WAE5B,KAAKrB,EACD,OAAOC,EAMX,QACI,OAAOgB,IE1EfS,KHAuB,WAAqC,IAAnCT,EAAkC,uDAA1BhB,EAAeiB,EAAW,uCAE3D,OAAQA,EAAOC,MACX,KAAKnB,EACD,MAAuBkB,EAAOG,QAAtBM,EAAR,EAAQA,IAAMC,EAAd,EAAcA,KAEd,OAAO,2BACAX,GADP,IAEIf,SAAU,EACVyB,MACAC,SAER,KAAK5B,EACD,OAAO,2BACAiB,GADP,IAEIf,SAAU,IAElB,KAAKF,EACD,OAAO,2BACAiB,GADP,IAEIU,IAAM,KACNC,KAAO,OAEf,QACI,OAAOX,MI7BbY,EAAsC,qBAAXC,QAA0BA,OAAOC,sCAAyCC,IAE9FC,EAAQC,YACjBpB,EACAe,EACIM,YAAgBC,O,kFCRlBC,E,OAAgBC,EAAMC,OAAO,CAC/BC,QAAUC,mDAIDC,EAAU,uCAAG,kDAAAC,EAAA,sDAAQC,EAAR,+BAAc,GAAKC,EAAnB,+BAAyB,GAAMC,EAA/B,+BAAuC,GAAKC,EAA5C,+BAAqD,MAArD,KAGdA,EAHc,OAIb,QAJa,OAOb,SAPa,QAUb,QAVa,QAab,WAba,wCAKGV,EAAcW,IAAIJ,EAAI,CAAEE,YAL3B,8CAkBdG,EAlBc,qDAQGZ,EAAca,KAAKN,EAAKC,EAAO,CAAEC,YARpC,yBAWGT,EAAcc,IAAIP,EAAKC,EAAO,CAAEC,YAXnC,yBAcGT,EAAce,OAAOR,EAAK,CAAEE,YAd/B,yBAkBGT,EAAcW,IAAIJ,EAAI,CAAEE,YAlB3B,eAsBdO,EAASJ,EAATI,KAtBc,kBAwBfA,GAxBe,4CAAH,qDCgEVC,EAAiB,iBAAO,CAAEnC,KAAOnB,IAYjCuD,EAAQ,SAAEC,GAAF,MAAa,CAC9BrC,KAAOnB,EACPqB,QAAUmC,IAGDC,EAAS,iBAAO,CAAEtC,KAAOnB,I,QCpFzB0D,EAAcC,MAAaC,MAAM,CAC1CC,MAAQF,MAAaE,MAAM,kBAAkBC,SAAS,aACtDC,SAAWJ,MAAaK,IAAI,EAAE,yBAAyBF,SAAS,eAGvDG,EAAiBN,MAAaC,MAAM,CAC7ChC,KAAO+B,MAAaG,SAAS,YAC7BD,MAAQF,MAAaE,MAAM,kBAC3BE,SAAUJ,MAAaG,SAAS,yBAChCI,iBAAkBP,MACdQ,MAAM,CAACR,IAAQ,YAAa,MAAO,2B,gBCsG5BS,EAxGK,WAEhB,IAAMC,EAAWC,cACjB,EAAoCC,YAAQ,CACxCC,SAAWC,YAAYf,KADnBgB,EAAR,EAAQA,SAAWC,EAAnB,EAAmBA,aAInB,EAA4EJ,YAAQ,CAChFC,SAAWC,YAAYR,KADRW,EAAnB,EAAQF,SAA2CG,EAAnD,EAAoCF,aAepC,OACI,qBAAKG,UAAU,4BAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,wBAAf,UACI,yCACA,uBAAMC,SAAYJ,GAfd,SAAEK,GAElBX,EFlBkB,SAAEW,GACxB,8CAAO,WAAQX,GAAR,mBAAA1B,EAAA,+EAIoBD,EAAW,QAAQsC,EAAQ,GAAK,QAJpD,QAMC,QAFMC,EAJP,cAMC,IAAGA,OAAH,EAAGA,EAAMC,MACLC,aAAaC,QAAQ,gBAAkBH,EAAKI,OAC5CF,aAAaC,QAAQ,yBAA0B,IAAIE,MAAOC,WAE1DlB,EAASd,EAAO,CAAE5B,IAAMsD,EAAKtD,IAAMC,KAAOqD,EAAKrD,SAVpD,gDAcSqB,EAdT,KAcSA,SACAI,EAASJ,EAATI,KACRmC,IAAKC,KAAK,QAASpC,EAAKqC,KAAO,SAhBhC,yDAAP,sDEiBcC,CAAWX,OAaT,UACI,qBAAKF,UAAU,4BAAf,SACI,mCACI3D,KAAK,OACL2D,UAAU,eACVc,YAAY,UACRlB,EAAS,aAGrB,qBAAKI,UAAU,4BAAf,SACI,mCACI3D,KAAK,WACL2D,UAAU,eACVc,YAAY,iBACRlB,EAAS,gBAGrB,qBAAKI,UAAU,4BAAf,SACI,uBACI3D,KAAK,SACL2D,UAAU,YACVe,MAAM,kBAMtB,sBAAKf,UAAU,wBAAf,UACI,0CACA,uBAAMC,SAAaF,GAvCZ,SAAC,GAAgC,IFC7BG,EEDFpD,EAA8B,EAA9BA,KAAQiC,EAAsB,EAAtBA,MAAQE,EAAc,EAAdA,SAErCM,GFDuBW,EECC,CAAEpD,OAAOiC,QAAQE,YFA7C,uCAAO,WAAQM,GAAR,mBAAA1B,EAAA,+EAIoBD,EAAW,YAAYsC,EAAQ,GAAK,QAJxD,QAMC,QAFMC,EAJP,cAMC,IAAGA,OAAH,EAAGA,EAAMC,MACLC,aAAaC,QAAQ,gBAAkBH,EAAKI,OAC5CF,aAAaC,QAAQ,yBAA0B,IAAIE,MAAOC,WAE1DlB,EAASd,EAAO,CAAE5B,IAAMsD,EAAKtD,IAAMC,KAAOqD,EAAKrD,SAVpD,gDAaSqB,EAbT,KAaSA,SACAI,EAAUJ,EAAVI,KACRmC,IAAKC,KAAK,QAASpC,EAAKqC,KAAO,SAfhC,yDAAP,2DEqCgB,UACI,qBAAKZ,UAAU,4BAAf,SACI,mCACI3D,KAAK,OACL2D,UAAU,eACVc,YAAY,UACRhB,EAAe,YAG3B,qBAAKE,UAAU,4BAAf,SACI,mCACI3D,KAAK,QACL2D,UAAU,eACVc,YAAY,UACRhB,EAAe,aAG3B,qBAAKE,UAAU,4BAAf,SACI,mCACI3D,KAAK,WACL2D,UAAU,eACVc,YAAY,iBACRhB,EAAe,gBAI3B,qBAAKE,UAAU,4BAAf,SACI,mCACI3D,KAAK,WACL2D,UAAU,eACVc,YAAY,2BACRhB,EAAe,wBAI3B,qBAAKE,UAAU,4BAAf,SACI,uBACI3D,KAAK,SACL2D,UAAU,YACVe,MAAM,+B,gBC3GzBC,G,OAAW,CACpBC,OAAQ,iBACRC,SAAU,IACVC,KAAM,IACNC,MAAO,MACPC,MAAO,MACPC,KAAM,SACNC,IAAK,SACLC,OAAQ,SACRC,KAAM,QACNC,KAAM,OACNC,MAAO,SACPC,gBAAiB,+BACjBC,SAAU,SAAAC,GAAK,8BAAkBA,EAAlB,QCTNC,GAAoB,SAAE1G,GAO/B,OALkBA,EAAOmB,KAAI,SAAEmF,GAAF,mBAAC,eACvBA,GADsB,IAEzB9F,IAAMF,IAAOgG,EAAM9F,KAAKD,SACxBF,MAAQC,IAAOgG,EAAMjG,OAAOE,eC6EvBoG,GAAc,SAAE3G,GAAF,MAAe,CACtCgB,KAAOnB,EACPqB,QAAUlB,IAQR4G,GAAc,SAACN,GAAD,MAAY,CAC5BtF,KAAOnB,EACPqB,QAAUoF,IAGDO,GAAwB,iBAAO,CACxC7F,KAAOnB,IAGLiH,GAAe,SAAER,GAAF,MAAc,CAC/BtF,KAAMnB,EACNqB,QAAUoF,IAGRS,GAAe,iBAAO,CACxB/F,KAAMnB,IClFKmH,GAvBA,WAEX,IAAQvF,EAASwF,aAAY,SAAAnG,GAAK,OAAIA,EAAMS,QAApCE,KACFyC,EAAWC,cAMjB,OACI,sBAAKQ,UAAU,uCAAf,UACI,sBAAMA,UAAU,eAAhB,SACMlD,IAGN,yBAAQkD,UAAU,yBAAyBuC,QAV9B,WACjBhD,GN6DG,SAACA,GAEJc,aAAamC,WAAW,iBACxBnC,aAAamC,WAAW,yBAExBjD,EAAUZ,QMjEVY,ED0G4B,CAChClD,KAAOnB,KCnGC,UACI,mBAAG8E,UAAU,wBACb,kDCVDyC,GAXO,SAAC,GAAa,IAAZd,EAAW,EAAXA,MAEZnG,EAA4BmG,EAA5BnG,MAAiBsB,EAAW6E,EAApBjD,KAAS5B,KACzB,OACI,gCACI,iCAAStB,IACT,sCAASsB,S,0DCJR4F,GAAc,iBAAO,CAC9BrG,KAAOnB,ICOLyH,GAAe,CACjBC,QAAS,CACPC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,0BAIjBC,KAAMC,cAAc,SAGpB,IAAMC,GAAM1H,MAAS2H,QAAQ,GAAGC,QAAQ,GAAGzH,IAAI,EAAE,SAC3C0H,GAAiBH,GAAII,QAAQ3H,IAAI,EAAE,SAGnC4H,GAAY,CACdlI,MAAQ,GACRC,MAAQ,GACRC,MAAQ2H,GAAIzH,SACZC,IAAM2H,GAAe5H,UAiLV+H,GA9KO,WAElB,IAAQ5H,EAAcuG,aAAY,SAAAnG,GAAK,OAAIA,EAAMD,MAAzCH,UACAT,EAAgBgH,aAAY,SAAAnG,GAAK,OAAIA,EAAMG,YAA3ChB,YACFiE,EAAWC,cAEjB,EAAoCoE,mBAAUP,GAAIzH,UAAlD,mBAAQiI,EAAR,KAAoBC,EAApB,KACA,EAAgCF,mBAAUJ,GAAe5H,UAAzD,mBAAQmI,EAAR,KAAkBC,EAAlB,KACA,EAAoCJ,oBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KAEA,EAAwCN,mBAAUF,IAAlD,mBAAOS,EAAP,KAAqBC,EAArB,KAEQ5I,EAAiC2I,EAAjC3I,MAAQC,EAAyB0I,EAAzB1I,MAAQC,EAAiByI,EAAjBzI,MAAQG,EAASsI,EAATtI,IAEhCwI,qBAAU,WAGFD,EADD9I,GAGiBoI,MAGtB,CAACpI,EAAa8I,IAQhB,IAAME,EAAoB,SAAC7H,GAEvB2H,EAAgB,2BACTD,GADQ,mBAEV1H,EAAE8H,OAAOzH,KAAQL,EAAE8H,OAAOxD,UAI7ByD,EAAa,WAGfjF,EDtE2B,CAC/BlD,KAAOnB,ICsEHqE,EAAU2C,MACVkC,EAAgBV,IAChBe,QAAQC,IAAI,uBAmDhB,OACI,8BACI,eAAC,KAAD,CACIC,OAAS5I,EAET6I,eAAiBJ,EACjBK,MAAOlC,GACPmC,eAAkB,IAClB9E,UAAU,QACV+E,iBAAiB,cAPrB,UASI,mCAAQzJ,EAAc,gBAAkB,eAAxC,OACA,uBACA,uBACI0E,UAAU,YACVC,SA7CQ,SAACxD,GACrBA,EAAEuI,iBAGF,IJtD2BrD,EIsDrBsD,EAAYtJ,IAAOD,GACnBwJ,EAAWvJ,IAAOE,GAExB,OAAGoJ,EAAUE,cAAcD,GAChBxE,IAAKC,KAAK,QAAU,sCAAoC,SAGhEnF,EAAM4J,OAAOC,OAAS,EACdnB,GAAc,IAKrB3E,EADDjE,GJlEwBqG,EImEKwC,EJlEpC,uCAAO,WAAO5E,GAAP,iBAAA1B,EAAA,sEAEO0C,EAAQF,aAAaiF,QAAQ,kBAAoB,GAFxD,SAGoB1H,EAAW,WAAD,OAAY+D,EAAMjF,KAAOiF,EAAO,CAAE,UAAYpB,GAAU,OAHtF,QAKC,QAFMJ,EAHP,cAKC,IAAGA,OAAH,EAAGA,EAAMC,MACLb,EAAS4C,GAAaR,IACtBjB,IAAKC,KAAK,qBAAuB,mCAAoC,YAP1E,gDAUC8D,QAAQC,IAAR,MAVD,yDAAP,uDA7C4B,SAAC/C,GAC7B,8CAAO,WAAQpC,EAAUgG,GAAlB,uBAAA1H,EAAA,+DACoB0H,IAAW3I,KAA1BC,EADL,EACKA,IAAMC,EADX,EACWA,KADX,SAGOyD,EAAQF,aAAaiF,QAAQ,kBAAoB,GAHxD,SAImB1H,EAAW,UAAW+D,EAAQ,CAAE,UAAYpB,GAAS,QAJxE,QAMC,QAFMiF,EAJP,cAMC,IAAGA,OAAH,EAAGA,EAAKpF,MACJuB,EAAM8D,GAAKD,EAAI7D,MAAMjF,IACrBiF,EAAMjD,KAAO,CACTgH,IAAM7I,EACNC,QAGJyC,EAAU0C,GAAYN,IACtBjB,IAAKC,KAAK,kBAAoB,gCAAiC,YAdpE,gDAkBC8D,QAAQC,IAAR,MACAhE,IAAKC,KAAK,QAAS,KAAIC,KAAO,SAnB/B,yDAAP,wDIiHkB+E,CAAiBxB,IAG/BD,GAAc,QACdM,MAmBQ,UAKI,sBAAKxE,UAAU,kBAAf,UACI,wDACA,cAAC,KAAD,CACI4F,SArEM,SAAEnE,GAE5BqC,EAAarC,GACb2C,EAAgB,2BACTD,GADQ,IAEXzI,MAAQ+F,MAiEQV,MAAQzF,EAAcI,EAAQmI,EAC9B7D,UAAU,oBAIlB,sBAAKA,UAAU,kBAAf,UACI,qDACA,cAAC,KAAD,CACI4F,SAtEI,SAAEnE,GAE1BuC,EAAWvC,GACX2C,EAAgB,2BACTD,GADQ,IAEXtI,IAAM4F,MAkEUV,MAAQzF,EAAcO,EAAMkI,EAC5B8B,QAAYhC,EACZ7D,UAAU,oBAIlB,uBACA,sBAAKA,UAAU,kBAAf,UACI,mDACA,uBACI3D,KAAK,OACL2D,UAAS,wBAAmBiE,GAAc,cAC1CnD,YAAY,uBACZhE,KAAK,QACLgJ,aAAa,MACb/E,MAAUvF,EACVoK,SAAYtB,IAEhB,uBAAOmB,GAAG,YAAYzF,UAAU,uBAAhC,yCAGJ,sBAAKA,UAAU,kBAAf,UACI,0BACI3D,KAAK,OACL2D,UAAS,wBAAmBiE,GAAc,cAC1CnD,YAAY,QACZiF,KAAK,IACLjJ,KAAK,QACLiE,MAAUtF,EACVmK,SAAYtB,IAEhB,uBAAOmB,GAAG,YAAYzF,UAAU,uBAAhC,yCAGJ,yBACI3D,KAAK,SACL2D,UAAU,2CAFd,UAII,mBAAGA,UAAU,gBACb,wDCrLTgG,GAjBG,WAEd,IAAMzG,EAAWC,cAKjB,OACI,wBACIQ,UAAU,sBACVuC,QAPe,WACnBhD,EAAUmD,OAIV,SAII,mBAAG1C,UAAU,mBCKViG,GAjBQ,WAEnB,IAAM1G,EAAWC,cAIjB,OACI,yBACIQ,UAAU,2BACVuC,QANkB,WACtBhD,EN6DJ,uCAAO,WAAOA,EAAWgG,GAAlB,mBAAA1H,EAAA,sEAGyBnB,EAAS6I,IAAWjJ,SAApChB,YAAgBoB,IAClB6D,EAAQF,aAAaiF,QAAQ,kBAAoB,GAJxD,SAKoB1H,EAAW,WAAD,OAAYlB,GAAO,GAAI,CAAE,UAAY6D,GAAU,UAL7E,QAOC,QAFMJ,EALP,cAOC,IAAGA,OAAH,EAAGA,EAAMC,MACLb,EAAS6C,MACT1B,IAAKC,KAAK,mBAAqB,iCAAkC,YATtE,gDAYC8D,QAAQC,IAAR,MAZD,yDAAP,0DM1DI,UAII,mBAAG1E,UAAU,iBACb,sDCGZrE,IAAOuK,OAAO,MACd,IAAMC,GAAYC,YAAgBzK,KAmInB0K,GAvGQ,WAEnB,IAAM9G,EAAWC,cACT3C,EAASyF,aAAa,SAAAnG,GAAK,OAAIA,EAAMS,QAArCC,IACR,EAAiCyF,aAAY,SAAAnG,GAAK,OAAIA,EAAMG,YAApDjB,EAAR,EAAQA,OAASC,EAAjB,EAAiBA,YACjB,EAA2BsI,mBACvBvD,aAAaiF,QAAQ,aAAe,SADxC,mBAAQgB,EAAR,KAAeC,EAAf,KAoEA,OATAlC,qBAAU,WACN9E,EP9EJ,uCAAO,WAAQA,GAAR,mBAAA1B,EAAA,sEAGO0C,EAAQF,aAAaiF,QAAQ,kBAAoB,GAHxD,SAImB1H,EAAW,UAAW,KAAO,CAAE,UAAY2C,GAAU,OAJxE,QAMC,QAFMiF,EAJP,cAMC,IAAGA,OAAH,EAAGA,EAAKpF,MACE/E,EAAS0G,GAAkByD,EAAInK,QACrCkE,EAASyC,GAAY3G,KAR1B,gDAWCoJ,QAAQC,IAAR,MAXD,yDAAP,yDO+EE,CAACnF,IAEH8E,qBAAU,WACNhE,aAAaC,QAAQ,WAAWgG,KAClC,CAACA,IAIC,sBAAKtG,UAAU,mBAAf,UACI,cAAC,GAAD,IAGA,cAAC,IAAD,CACImG,UAAWA,GACX9K,OAAQA,EACRmL,cAAc,QACdC,YAAY,MACZzF,SAAYA,EACZ0F,gBA3EY,SAAC/E,EAAQjG,EAAOG,EAAK8K,GAWzC,MAAO,CACH9B,MARU,CACV+B,gBAAkB/J,IAAQ8E,EAAMjD,KAAKgH,IAAO,UAAY,UACxDmB,aAAe,MACfC,QAAU,GACVC,QAAU,QACVC,MAAQ,WAmEJC,WAAa,CACTtF,MAAQc,IAEZyE,mBA9DU,SAACzK,GAEnB8C,EAAUmD,OA6DFyE,cAzDU,SAACxF,GAEnBpC,EPSsB,SAACoC,GAAD,MAAY,CACtCtF,KAAOnB,EACPqB,QAAUoF,GOXIyF,CAAezF,KAwDjB0F,aAhDS,SAAC5K,GAElB8C,EAAW2C,MAEPzF,EAAEL,QA6CEkL,YAAe,EACfC,OAtDS,SAAC9K,GAClB8J,EAAQ9J,IAsDA6J,KAAOA,MAGPhL,GAAe,cAAC,GAAD,IACnB,cAAC,GAAD,IACA,cAAC,GAAD,Q,4CCrIGkM,GAVM,SAAC,GAA4D,IAA7CC,EAA4C,EAAxDC,UAAwBC,EAAgC,EAAhCA,gBAAqBC,EAAW,mBAC7E,OACI,cAAC,IAAD,2BAAWA,GAAX,IACIC,OAAU,SAACC,GAAD,OACNH,EAAkB,cAACF,EAAD,eAAeK,IAAY,cAAC,IAAD,CAAUC,GAAG,gB,mCCM3DC,GAVK,SAAC,GAA4D,IAA7CP,EAA4C,EAAxDC,UAAwBC,EAAgC,EAAhCA,gBAAqBC,EAAW,mBAC5E,OACI,cAAC,IAAD,2BAAWA,GAAX,IACIC,OAAU,SAACC,GAAD,OACLH,EAA6C,cAAC,IAAD,CAAUI,GAAG,MAAxC,cAACN,EAAD,eAAeK,SC+BnCG,GAtBG,WAEd,IAAM1I,EAAWC,cACT3C,EAAQyF,aAAY,SAAAnG,GAAK,OAAIA,EAAMS,QAAnCC,IAKR,OAJAwH,qBAAU,Wf+Be,IAAEnE,Ee9BvBX,Ef+BJ,uCAAO,WAAQA,GAAR,iBAAA1B,EAAA,sEAGO0C,EAAQF,aAAaiF,QAAQ,kBAAoB,GAHxD,SAIoB1H,EAAW,cAAcsC,EAAQ,CAAE,UAAYK,GAAU,OAJ7E,QAMC,QAFMJ,EAJP,cAMC,IAAGA,OAAH,EAAGA,EAAMC,MACLC,aAAaC,QAAQ,gBAAkBH,EAAKI,OAC5CF,aAAaC,QAAQ,yBAA0B,IAAIE,MAAOC,WAE1DlB,EAASd,EAAO,CAAE5B,IAAMsD,EAAKtD,IAAMC,KAAOqD,EAAKrD,SAVpD,gDAcCyC,EAAUf,KAdX,yDAAP,yDe9BE,CAACe,IAGC,cAAC,IAAD,UACG,8BACI,eAAC,IAAD,WACI,cAAC,GAAD,CAAa2I,OAAK,EAACC,KAAK,SAAST,UAAYpI,EAAaqI,kBAAsB9K,IAChF,cAAC,GAAD,CAAcqL,OAAK,EAACC,KAAK,IAAIT,UAAYrB,GAAgBsB,kBAAsB9K,IAE/E,cAAC,IAAD,CAAUkL,GAAG,cCjBjBK,GARK,WAChB,OACI,cAAC,IAAD,CAAUjL,MAAQA,EAAlB,SACI,cAAC,GAAD,O,OCDZkL,IAASR,OACL,cAAC,GAAD,IACFS,SAASC,eAAe,W","file":"static/js/main.08e681d4.chunk.js","sourcesContent":["\r\n\r\nexport const types = {\r\n    uiOpenModal : \"[UI] Open Modal\",\r\n    uiCloseModal : \"[UI] Close Modal\",\r\n\r\n    eventStartLoading : \"Start loading events\",\r\n    eventLoaded: \"[EVENT] Events loaded\",\r\n    eventSetActive : \"[EVENT] Set active\",\r\n    eventStartAddNew : \"[EVENT] Start add new\",\r\n    eventAddNew : \"[EVENT] New event\",\r\n    eventClearActiveEvent: \"[EVENT] Clear active event\",\r\n    eventUpdated : \"[EVENT] Updated event\",\r\n    eventDeleted : \"[EVENT] Deleted event\",\r\n    eventSetAuxiliar : \"[EVENT] Set auxiliar\",\r\n\r\n    authLoading : \"[AUTH] Checking auth\",\r\n    authLoadingFinish : \"[AUTH] Finish checking\",\r\n    authStartLogin : \"[AUTH] Start login\",\r\n    authStartRegister : \"[AUTH] Start register\",\r\n    authStartRenewToken : \"[AUTH] Start renew token\",\r\n    authLogin : \"[AUTH] login\",\r\n    authLogout : \"[AUTH] logout\",\r\n\r\n    clearCalendar : \"[EVENT] Clear calendar\"\r\n\r\n}","import { types } from \"../types\";\r\n\r\n\r\n\r\nconst initialState={\r\n    loading : true,\r\n    // uid : null,\r\n    // name : null,\r\n}\r\n\r\nexport const authReducer = ( state = initialState , action) => {\r\n\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            const { uid , name } = action.payload;\r\n            \r\n            return {\r\n                ...state,\r\n                loading : false,\r\n                uid,\r\n                name\r\n            }\r\n        case types.authLoadingFinish : \r\n            return {\r\n                ...state,\r\n                loading : false\r\n            }\r\n        case types.authLogout:\r\n            return {\r\n                ...state,\r\n                uid : null,\r\n                name : null,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import moment from \"moment\";\r\nimport { types } from \"../types\";\r\n\r\n// {\r\n//     id : new Date().getTime(),\r\n//     title : 'Release something',\r\n//     start : moment().toDate(),\r\n//     end : moment().add(2,'hours').toDate(),\r\n//     notes : 'Lanzamiento pe chato',\r\n//     user : {\r\n//         _id : '123',\r\n//         name : 'Franco'\r\n//     }\r\n// },\r\n// {\r\n//     id : new Date().getTime(),\r\n//     title : 'Go to sk8',\r\n//     start : moment().add(1,'days').toDate(),\r\n//     end : moment().add(1,'days').add(2,'hours').toDate(),//añadir 2 horas\r\n//     notes : 'Notas que yo quisiera agregar',\r\n//     user : {\r\n//         _id : '456',\r\n//         name : 'Nicolai'\r\n//     }\r\n//     /* allDay : true  , ya no es necesario hora de inicio y de fin */\r\n// },  \r\n\r\nconst initialState = {\r\n    events : [\r\n        \r\n    ] ,\r\n    activeEvent : null,\r\n    auxiliarEvent : {\r\n        title : '',\r\n        notes : '',\r\n        start : moment().toDate(),\r\n        end : moment().add('1',\"hours\").toDate(),\r\n    },\r\n}\r\n\r\nexport const calendarReducer = ( state = initialState , action) => {\r\n\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n\r\n            return {\r\n                ...state,\r\n                activeEvent : action.payload\r\n            }\r\n        case types.eventAddNew :\r\n            return {\r\n                ...state,\r\n                events : [...state.events,action.payload]\r\n            }\r\n        case types.eventClearActiveEvent :\r\n            return {\r\n                ...state,\r\n                activeEvent : null,\r\n            }\r\n        case types.eventUpdated : \r\n            return {\r\n                ...state,\r\n                events : state.events.map ( e => ( e.eid===action.payload.eid ? action.payload : e ))\r\n            }\r\n\r\n        case types.eventDeleted : \r\n            return {\r\n                ...state,\r\n                events : state.events.filter( e => e.eid!== state.activeEvent.eid),\r\n                activeEvent : null,\r\n            }\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events : [...action.payload]\r\n            }\r\n        case types.clearCalendar :\r\n            return initialState\r\n        // case types.eventSetAuxiliar:\r\n        //     return {\r\n        //         ...state,\r\n        //         auxiliarEvent : action.payload\r\n        //     }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { types } from \"../types\";\r\n\r\n\r\n//Controlar apertura y cierre del modal\r\nconst initialState = {\r\n    modalOpen : false\r\n}\r\n\r\nexport const uiReducer = ( state = initialState , action ) => {\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen : true,\r\n            }\r\n        case types.uiCloseModal : \r\n            return {\r\n                ...state,\r\n                modalOpen : false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { uiReducer } from \"./uiReducer\";\r\n\r\n\r\n\r\nexport const globalReducer = combineReducers({\r\n    ui : uiReducer,\r\n    calendar : calendarReducer,\r\n    auth : authReducer\r\n    //Add more reducers\r\n})","import { createStore , compose, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk';\r\nimport { globalReducer } from '../reducers/globalReducer'\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    globalReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n)","import axios from 'axios'\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL : process.env.REACT_APP_URL_BACKEND\r\n})\r\n\r\n\r\nexport const requestAPI = async ( url = '' , body= { } , headers={} , method = 'GET') => {\r\n\r\n    let response;\r\n    switch (method) {\r\n        case 'GET':\r\n            response = await axiosInstance.get(url,{ headers });\r\n            break;\r\n        case 'POST':\r\n            response = await axiosInstance.post(url, body , { headers});\r\n            break;\r\n        case 'PUT':\r\n            response = await axiosInstance.put(url, body , { headers });\r\n            break;\r\n        case 'DELETE':\r\n            response = await axiosInstance.delete(url, { headers });\r\n            break;\r\n        //AÑADIR MAS\r\n        default://EL GET\r\n            response = await axiosInstance.get(url,{ headers });\r\n            break;\r\n    }\r\n\r\n    const { data } = response;\r\n\r\n    return data;\r\n\r\n}\r\n","\r\nimport Swal from \"sweetalert2\";\r\nimport { requestAPI } from \"../../axios/axios.config\";\r\nimport { types } from \"../types\";\r\n\r\n\r\n\r\n\r\nexport const startLogin = ( values ) => {\r\n    return async ( dispatch ) => {\r\n\r\n        try{\r\n\r\n            const resp = await requestAPI('/auth',values, {} , 'POST');\r\n            \r\n            if(resp?.ok){\r\n                localStorage.setItem('CalendarToken' , resp.token );\r\n                localStorage.setItem('CalendarTokenInitDate' , new Date().getTime() );\r\n    \r\n                dispatch(login( { uid : resp.uid , name : resp.name }))\r\n            }\r\n        }catch( err ){\r\n\r\n            const { response } = err;\r\n            const { data } = response;\r\n            Swal.fire('Error', data.mssg , 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const startRegister = ( values ) => {\r\n    return async ( dispatch ) => {\r\n\r\n        try{\r\n\r\n            const resp = await requestAPI('/auth/new',values, {} , 'POST');\r\n            \r\n            if(resp?.ok){\r\n                localStorage.setItem('CalendarToken' , resp.token );\r\n                localStorage.setItem('CalendarTokenInitDate' , new Date().getTime() );\r\n    \r\n                dispatch(login( { uid : resp.uid , name : resp.name }))\r\n            }\r\n        }catch(err){\r\n            const { response } = err;\r\n            const { data  } = response;\r\n            Swal.fire('Error', data.mssg , 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const startChecking = ( values ) => {\r\n    return async ( dispatch ) => {\r\n        try{\r\n\r\n            const token = localStorage.getItem('CalendarToken') || '';\r\n            const resp = await requestAPI('/auth/renew',values, { 'x-token' : token } , 'GET');\r\n            \r\n            if(resp?.ok){\r\n                localStorage.setItem('CalendarToken' , resp.token );\r\n                localStorage.setItem('CalendarTokenInitDate' , new Date().getTime() );\r\n    \r\n                dispatch(login( { uid : resp.uid , name : resp.name }))\r\n            }\r\n            \r\n        }catch(err){\r\n            dispatch( finishChecking())\r\n        }\r\n    }\r\n}\r\n\r\nexport const finishChecking = () => ({ type : types.authLoadingFinish})\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n\r\n        localStorage.removeItem('CalendarToken');\r\n        localStorage.removeItem('CalendarTokenInitDate');\r\n\r\n        dispatch( logout());\r\n    }\r\n}\r\n\r\n//Sincrono\r\nexport const login = ( user ) => ({\r\n    type : types.authLogin,\r\n    payload : user\r\n})\r\n\r\nexport const logout = () => ({ type : types.authLogout})","\r\nimport * as yup from 'yup';\r\n\r\n\r\nexport const schemaLogin = yup.object().shape({\r\n    email : yup.string().email('*Invalid email').required('*Required'),\r\n    password : yup.string().min(5,'*5 characters minimun').required('*Required')\r\n})\r\n\r\nexport const schemaRegister = yup.object().shape({\r\n    name : yup.string().required('Required'),\r\n    email : yup.string().email('*Invalid email'),\r\n    password: yup.string().required('*Password is required'),\r\n    confirm_password: yup.string()\r\n       .oneOf([yup.ref('password'), null], '*Passwords must match')\r\n})","import React from 'react'\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\nimport { startLogin, startRegister } from '../../redux/actions/auth';\r\n\r\nimport { schemaLogin, schemaRegister } from '../../helpers/schemas';\r\n\r\nimport './login.css';\r\n\r\nconst LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { register , handleSubmit } = useForm({\r\n        resolver : yupResolver(schemaLogin)\r\n    });\r\n\r\n    const { register : registerCreate , handleSubmit : handleSubmitRegister } = useForm({\r\n        resolver : yupResolver(schemaRegister)\r\n    });\r\n\r\n\r\n    const handleLogin = ( values ) => {\r\n\r\n        dispatch( startLogin(values) );\r\n    }\r\n\r\n    const handleRegister = ({name ,  email , password}) => {\r\n\r\n        dispatch( startRegister({ name , email , password}) );\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit= { handleSubmit(handleLogin)}>\r\n                        <div className=\"form-group wrapper__input\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                {...register('email')}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group wrapper__input\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                {...register('password')}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group wrapper__input\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit = { handleSubmitRegister(handleRegister)}>\r\n                        <div className=\"form-group wrapper__input\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                {...registerCreate('name')}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group wrapper__input\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                {...registerCreate('email')}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group wrapper__input\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                {...registerCreate('password')} \r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group wrapper__input\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                {...registerCreate('confirm_password')} \r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group wrapper__input\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import moment from \"moment\"\r\n\r\n\r\n\r\nexport const prepareDataEvents = ( events ) => {\r\n\r\n    const cleanData = events.map(( event) => ({\r\n        ...event,\r\n        end : moment(event.end).toDate(),\r\n        start : moment(event.start).toDate(),\r\n    }))\r\n    return cleanData;\r\n}","import Swal from \"sweetalert2\";\r\nimport { requestAPI } from \"../../axios/axios.config\";\r\nimport { prepareDataEvents } from \"../../helpers/prepareData\";\r\nimport { types } from \"../types\";\r\n\r\n\r\n\r\n\r\nexport const eventStartAddNew = (event) => {\r\n    return async ( dispatch, getState ) => {\r\n        const { uid , name } = getState().auth;\r\n        try{\r\n            const token = localStorage.getItem('CalendarToken') || '';\r\n            const res = await requestAPI('/events', event , { 'x-token' : token }, 'POST');\r\n\r\n            if(res?.ok){\r\n                event.id = res.event.eid;\r\n                event.user = {\r\n                    _id : uid,\r\n                    name\r\n                }\r\n                // console.log(event);\r\n                dispatch (eventAddNew(event));\r\n                Swal.fire('Evento Agregado' , 'Evento agregado correctamente', 'success')\r\n            }\r\n\r\n        }catch(err){\r\n            console.log(err);\r\n            Swal.fire('Error', err.mssg , 'error')\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const eventStartLoading = () => {\r\n    return async ( dispatch ) => {\r\n        \r\n        try{\r\n            const token = localStorage.getItem('CalendarToken') || '';\r\n            const res = await requestAPI('/events', null , { 'x-token' : token } , 'GET');\r\n\r\n            if(res?.ok){\r\n                const events = prepareDataEvents(res.events);\r\n                dispatch(eventLoaded(events))\r\n            }\r\n        }catch(err){\r\n            console.log(err);\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport const eventStartUpdated = ( event ) => {\r\n    return async (dispatch) => {\r\n        try{\r\n            const token = localStorage.getItem('CalendarToken') || '';\r\n            const resp = await requestAPI(`/events/${event.eid}`, event ,{ 'x-token' : token } , 'PUT')\r\n\r\n            if(resp?.ok){\r\n                dispatch(eventUpdated(event));\r\n                Swal.fire('Evento Actualizado' , 'Evento actualizado correctamente', 'success')\r\n            }\r\n        }catch(err){\r\n            console.log(err);\r\n        }\r\n    }\r\n}\r\n\r\nexport const eventStartDeleting = (event) => {\r\n    return async (dispatch , getState) => {\r\n        try{\r\n\r\n            const { activeEvent : { eid }} = getState().calendar;\r\n            const token = localStorage.getItem('CalendarToken') || '';\r\n            const resp = await requestAPI(`/events/${eid}`, {} ,{ 'x-token' : token } , 'DELETE')\r\n\r\n            if(resp?.ok){\r\n                dispatch(eventDeleted());\r\n                Swal.fire('Evento eliminado' , 'Evento eliminado correctamente', 'success')\r\n            }\r\n        }catch(err){\r\n            console.log(err);\r\n        }\r\n    }\r\n}\r\n\r\nexport const eventLoaded = ( events ) => ({\r\n    type : types.eventLoaded,\r\n    payload : events\r\n})\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type : types.eventSetActive,\r\n    payload : event\r\n})\r\n\r\nconst eventAddNew = (event) => ({\r\n    type : types.eventAddNew,\r\n    payload : event\r\n})\r\n\r\nexport const eventClearActiveEvent = () => ({\r\n    type : types.eventClearActiveEvent\r\n})\r\n\r\nconst eventUpdated = ( event ) => ({\r\n    type: types.eventUpdated,\r\n    payload : event\r\n})\r\n\r\nconst eventDeleted = () => ({\r\n    type: types.eventDeleted\r\n})\r\n\r\nexport const eventSetAuxiliar = (event) => ({\r\n    type : types.eventSetAuxiliar,\r\n    payload : event\r\n})\r\n\r\nexport const clearCalendar = () => ({\r\n    type : types.clearCalendar\r\n})","import React from 'react'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../redux/actions/auth';\r\nimport { clearCalendar } from '../../redux/actions/calendar';\r\n\r\nconst Navbar = () => {\r\n\r\n    const { name } = useSelector(state => state.auth);\r\n    const dispatch = useDispatch();\r\n    \r\n    const handleLogout = () => {\r\n        dispatch( startLogout() );\r\n        dispatch( clearCalendar() );\r\n    } \r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4 px-4\">\r\n            <span className=\"navbar-brand\">\r\n                { name }\r\n            </span>\r\n\r\n            <button className=\"btn btn-outline-danger\" onClick = { handleLogout }>\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span>  Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\n\r\nconst CalendarEvent = ({event}) => {\r\n\r\n    const { title , user : { name } } = event;\r\n    return (\r\n        <div>\r\n            <strong>{title}</strong>\r\n            <span>- {name}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CalendarEvent\r\n","import { types } from \"../types\";\r\n\r\n\r\n\r\nexport const uiOpenModal = () => ({\r\n    type : types.uiOpenModal   \r\n})\r\n\r\nexport const uiCloseModal = () => ({\r\n    type : types.uiCloseModal   \r\n})","import React, { useEffect, useState } from 'react'\r\nimport { useSelector , useDispatch} from 'react-redux';\r\n\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { uiCloseModal } from '../../redux/actions/ui';\r\nimport { eventStartAddNew, eventClearActiveEvent, eventStartUpdated } from '../../redux/actions/calendar';\r\n// import { getInitialState } from '../../helpers/getInitialState';\r\n\r\nconst customStyles = {\r\n    content: {\r\n      top: '50%',\r\n      left: '50%',\r\n      right: 'auto',\r\n      bottom: 'auto',\r\n      marginRight: '-50%',\r\n      transform: 'translate(-50%, -50%)',\r\n    },\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\n//El evento tiene que empezar en una hora fija\r\nconst now = moment().minutes(0).seconds(0).add(1,'hours'); \r\nconst nowMoreOneHour = now.clone().add(1,'hours'); \r\n\r\n\r\nconst initState = {\r\n    title : '',\r\n    notes : '',\r\n    start : now.toDate(),\r\n    end : nowMoreOneHour.toDate(),\r\n}\r\n\r\nconst CalendarModal = () => {\r\n\r\n    const { modalOpen } = useSelector(state => state.ui);\r\n    const { activeEvent } = useSelector(state => state.calendar);\r\n    const dispatch = useDispatch();\r\n\r\n    const [ dateStart , setDateStart] = useState( now.toDate());\r\n    const [ dateEnd , setDateEnd] = useState( nowMoreOneHour.toDate());\r\n    const [titleValid, setTitleValid] = useState(true);\r\n\r\n    const [eventDetails, setEventDetails] = useState( initState);\r\n    \r\n    const { title , notes , start , end }  = eventDetails;\r\n\r\n    useEffect(()=>{\r\n\r\n        if(activeEvent){\r\n            setEventDetails(activeEvent);\r\n        }else{\r\n            setEventDetails(initState);\r\n        }\r\n\r\n    },[activeEvent, setEventDetails])\r\n\r\n    // useEffect(()=>{\r\n    //     if(auxiliarEvent){\r\n    //         setEventDetails(auxiliarEvent);\r\n    //     }\r\n    // },[auxiliarEvent])\r\n\r\n    const handleInputChange = (e) => {\r\n\r\n        setEventDetails({\r\n            ...eventDetails,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    const closeModal = () => {\r\n        // setIsOpenModal(false);\r\n\r\n        dispatch( uiCloseModal() )\r\n        dispatch( eventClearActiveEvent());\r\n        setEventDetails(initState);//Estamos reseteando\r\n        console.log('Cerrando modal....');\r\n    }\r\n\r\n    const handleStartDateChange = ( date ) => {\r\n        // console.log(date);\r\n        setDateStart(date);\r\n        setEventDetails({\r\n            ...eventDetails,\r\n            start : date\r\n        })\r\n    }\r\n    const handleEndDateChange = ( date ) => {\r\n        // console.log(date);\r\n        setDateEnd(date);\r\n        setEventDetails({\r\n            ...eventDetails,\r\n            end : date\r\n        })\r\n    }\r\n\r\n\r\n    const handleSaveEvent = (e) => {\r\n        e.preventDefault();\r\n        // console.log(eventDetails);\r\n\r\n        const startDate = moment(start);\r\n        const startEnd = moment(end);\r\n\r\n        if(startDate.isSameOrAfter(startEnd)){\r\n            return Swal.fire('Error' , 'La fecha de fin debe ser después', 'error');\r\n        }\r\n\r\n        if(title.trim().length < 2){\r\n            return setTitleValid(false);\r\n        }\r\n\r\n\r\n        if(activeEvent){\r\n            dispatch( eventStartUpdated(eventDetails) )\r\n        }else{\r\n\r\n            dispatch( eventStartAddNew(eventDetails));\r\n        }\r\n\r\n        setTitleValid(true);\r\n        closeModal();\r\n    }\r\n\r\n\r\n   \r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                isOpen={ modalOpen }\r\n                /* onAfterOpen={afterOpenModal} */\r\n                onRequestClose={ closeModal }\r\n                style={customStyles}\r\n                closeTimeoutMS ={ 200}\r\n                className=\"modal\"\r\n                overlayClassName=\"modal-fondo\"\r\n            >\r\n                <h1> {!!activeEvent ? 'Editar evento' : 'Nuevo evento'} </h1>\r\n                <hr />\r\n                <form \r\n                    className=\"container\"\r\n                    onSubmit= { handleSaveEvent }\r\n                >\r\n\r\n                    <div className=\"form-group mb-2\">\r\n                        <label>Fecha y hora inicio</label>\r\n                        <DateTimePicker\r\n                            onChange={ handleStartDateChange }\r\n                            value={ activeEvent ? start : dateStart }\r\n                            className=\"form-control\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-2\">\r\n                        <label>Fecha y hora fin</label>\r\n                        <DateTimePicker\r\n                            onChange={ handleEndDateChange }\r\n                            value={ activeEvent ? end : dateEnd }\r\n                            minDate = { dateStart}\r\n                            className=\"form-control\"\r\n                        />\r\n                    </div>\r\n\r\n                    <hr />\r\n                    <div className=\"form-group mb-2\">\r\n                        <label>Titulo y notas</label>\r\n                        <input \r\n                            type=\"text\" \r\n                            className={`form-control ${!titleValid && \"is-invalid\"}`}\r\n                            placeholder=\"Título del evento\"\r\n                            name=\"title\"\r\n                            autoComplete=\"off\"\r\n                            value = { title }\r\n                            onChange= { handleInputChange }\r\n                        />\r\n                        <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-2\">\r\n                        <textarea \r\n                            type=\"text\" \r\n                            className={`form-control ${!titleValid && \"is-invalid\"}`}\r\n                            placeholder=\"Notas\"\r\n                            rows=\"5\"\r\n                            name=\"notes\"\r\n                            value = { notes }\r\n                            onChange= { handleInputChange }\r\n                        ></textarea>\r\n                        <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                    </div>\r\n\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-outline-primary col-12 mt-2 mb-2\"\r\n                    >\r\n                        <i className=\"far fa-save\"></i>\r\n                        <span> Guardar</span>\r\n                    </button>\r\n\r\n                </form>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CalendarModal\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { uiOpenModal } from '../../redux/actions/ui';\r\n\r\nconst AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const handleNewEvent = () => {\r\n        dispatch( uiOpenModal() )\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick= { handleNewEvent }\r\n        >\r\n            <i className=\"fas fa-plus\" />\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default AddNewFab\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventDeleted, eventStartDeleting } from '../../redux/actions/calendar';\r\n\r\nconst DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const handleDeleteEvent = () => {\r\n        dispatch( eventStartDeleting());\r\n    }\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-trash\"\r\n            onClick= { handleDeleteEvent }\r\n        >\r\n            <i className=\"fas fa-trash\" />\r\n            <span> Borrar evento</span>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default DeleteEventFab\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Calendar , momentLocalizer} from 'react-big-calendar'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport moment from 'moment'\r\nimport 'moment/locale/es'\r\n\r\nimport { messages } from '../../helpers/messages-es'\r\nimport Navbar from '../ui/Navbar'\r\nimport CalendarEvent from './CalendarEvent'\r\n\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\r\nimport CalendarModal from './CalendarModal'\r\nimport { uiOpenModal } from '../../redux/actions/ui'\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading} from '../../redux/actions/calendar'\r\nimport AddNewFab from '../ui/AddNewFab'\r\nimport DeleteEventFab from '../ui/DeleteEventFab'\r\n\r\n// Setup the localizer by providing the moment (or globalize) Object\r\n// to the correct localizer.\r\nmoment.locale('es')\r\nconst localizer = momentLocalizer(moment)\r\n\r\n// const events = [\r\n//     {\r\n//         title : 'First event',\r\n//         start : moment().toDate(),\r\n//         end : moment().add(2,'hours').toDate(),//añadir 2 horas\r\n//         bgColor : '#333333',\r\n//         user : {\r\n//             _id : '123',\r\n//             name : 'Franco'\r\n//         }\r\n//         /* allDay : true */\r\n//     },\r\n//     {\r\n//         title : 'Second event',\r\n//         start : moment().add(1,'days').toDate(),\r\n//         end : moment().add(2,'hours').toDate(),//añadir 2 horas\r\n//         bgColor : '#333333',\r\n//         notes : 'Notas que yo quisiera agregar',\r\n//         user : {\r\n//             _id : '456',\r\n//             name : 'Nicolai'\r\n//         }\r\n//         /* allDay : true  , ya no es necesario hora de inicio y de fin */\r\n//     },\r\n\r\n// ]\r\nconst CalendarScreen = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const { uid  } = useSelector( state => state.auth);\r\n    const { events , activeEvent } = useSelector(state => state.calendar);\r\n    const [ view , setView ] = useState(\r\n        localStorage.getItem('lastView') || 'month'\r\n    )\r\n    //Se realiza por cada evento\r\n    const evetStyleGetter = (event , start ,end ,isSelected) => {\r\n        //Style a retornar\r\n\r\n        //Esto se ejecuta uno por uno\r\n        const style = {\r\n            backgroundColor : uid === event.user._id ?  '#367CF7' : '#465660',\r\n            borderRadius : '0px',\r\n            opacity : 0.8,\r\n            display : 'block',\r\n            color : 'white'\r\n        }\r\n        return {\r\n            style\r\n        }\r\n    }\r\n\r\n    //Doble click para activar evento y el modal para editarlo\r\n    const onDoubleClick = (e) => {\r\n        // console.log(e);\r\n        dispatch( uiOpenModal())\r\n    }\r\n\r\n    //Un click y activar evento , valido para eliminar\r\n    const onSelectEvent = (event) => {\r\n        // console.log(e);\r\n        dispatch( eventSetActive(event) );\r\n    }\r\n\r\n    //Controlar cambio mes semana dia\r\n    const onViewChange = (e) => {\r\n        setView(e);\r\n    }\r\n\r\n    const onSelectSlot = (e) => {\r\n        \r\n        dispatch ( eventClearActiveEvent() );\r\n\r\n        if( e.action ===\"doubleClick\" ){\r\n            // const { start , end } = e;\r\n\r\n            // const startDate = moment(start);\r\n            // console.log(startDate.toDate());\r\n            // const endDate = moment(end).add('1','hours');\r\n            \r\n            // dispatch ( eventSetAuxiliar({\r\n            //     title : 'Hola',\r\n            //     notes : '',\r\n            //     start : startDate.toDate(),\r\n            //     end : endDate.toDate(),\r\n            // }))\r\n            // dispatch ( uiOpenModal() );\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch( eventStartLoading());\r\n    },[dispatch])\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('lastView',view);\r\n    },[view])\r\n\r\n\r\n    return (\r\n        <div className=\"calendar__screen\">\r\n            <Navbar />\r\n            \r\n\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages = {messages}\r\n                eventPropGetter = { evetStyleGetter }\r\n                components= {{\r\n                    event : CalendarEvent\r\n                }}\r\n                onDoubleClickEvent = { onDoubleClick}//Cuando se activa el evento\r\n                onSelectEvent= { onSelectEvent}\r\n                onSelectSlot = { onSelectSlot }\r\n                selectable = { true }\r\n                onView= { onViewChange}\r\n                view={ view }\r\n            />\r\n\r\n            { !!activeEvent && <DeleteEventFab />  }\r\n            <AddNewFab />\r\n            <CalendarModal />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CalendarScreen\r\n","import React from 'react'\r\nimport { Route , Redirect } from 'react-router-dom'\r\n\r\nconst PrivateRoute = ( { component : Component , isAuthenticated , ...rest }) => {\r\n    return (\r\n        <Route {...rest }\r\n            render= { (props) => (\r\n                isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n            ) }        \r\n        />\r\n    )\r\n}\r\n\r\nexport default PrivateRoute\r\n","import React from 'react'\r\nimport { Route , Redirect } from 'react-router-dom'\r\n\r\nconst PublicRoute = ( { component : Component , isAuthenticated , ...rest }) => {\r\n    return (\r\n        <Route {...rest }\r\n            render= { (props) => (\r\n                !isAuthenticated ? <Component {...props} /> : <Redirect to=\"/\" />\r\n            ) }        \r\n        />\r\n    )\r\n}\r\n\r\nexport default PublicRoute\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { \r\n    BrowserRouter as Router, \r\n    Switch,\r\n    Redirect\r\n} from 'react-router-dom'\r\n\r\nimport LoginScreen from '../components/auth/LoginScreen'\r\nimport CalendarScreen from '../components/calendar/CalendarScreen'\r\n\r\nimport { startChecking } from '../redux/actions/auth'\r\nimport PrivateRoute from './PrivateRoute'\r\nimport PublicRoute from './PublicRoute'\r\n\r\nconst AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { uid } = useSelector(state => state.auth);\r\n    useEffect(() => {\r\n        dispatch ( startChecking());\r\n    },[dispatch])\r\n\r\n    return (\r\n        <Router>\r\n           <div>\r\n               <Switch>\r\n                   <PublicRoute exact path=\"/login\" component ={LoginScreen} isAuthenticated = { !!uid } />\r\n                   <PrivateRoute exact path=\"/\" component ={CalendarScreen} isAuthenticated = { !!uid } />\r\n\r\n                   <Redirect to=\"/\" />\r\n               </Switch>\r\n           </div>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default AppRouter\r\n","import React from 'react'\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './redux/store/store';\r\nimport AppRouter from './router/AppRouter';\r\n\r\n\r\nconst CalendarApp = () => {\r\n    return (\r\n        <Provider store={ store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n\r\nexport default CalendarApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport CalendarApp from './CalendarApp';\n\n\nimport './index.css';\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}